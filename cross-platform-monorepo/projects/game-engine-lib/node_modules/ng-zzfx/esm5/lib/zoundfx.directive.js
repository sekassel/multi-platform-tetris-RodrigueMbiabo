import { __decorate, __read, __spread } from "tslib";
import { AfterViewInit, Directive, ElementRef, Input, Renderer2 } from '@angular/core';
import * as zzfx from './source/zzfx';
var ZoundfxDirective = /** @class */ (function () {
    function ZoundfxDirective(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this.vol = 0.1; // Number from 0 to 1;
        this.trigger = 'onclick';
    }
    ZoundfxDirective.prototype.ngAfterViewInit = function () {
        this.zzfxFn = zzfx.ZZFX(this.vol);
        this.registerEventListeners();
    };
    ZoundfxDirective.prototype.registerEventListeners = function () {
        var _this = this;
        this.renderer.listen(this.el.nativeElement, this.trigger, function () {
            _this.zzfxFn.apply(_this, __spread(_this.zound));
        });
    };
    ZoundfxDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    __decorate([
        Input()
    ], ZoundfxDirective.prototype, "vol", void 0);
    __decorate([
        Input()
    ], ZoundfxDirective.prototype, "trigger", void 0);
    __decorate([
        Input()
    ], ZoundfxDirective.prototype, "zound", void 0);
    ZoundfxDirective = __decorate([
        Directive({
            selector: '[zoundfx]'
        })
    ], ZoundfxDirective);
    return ZoundfxDirective;
}());
export { ZoundfxDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem91bmRmeC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16emZ4LyIsInNvdXJjZXMiOlsibGliL3pvdW5kZnguZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsYUFBYSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNyRixPQUFPLEtBQUssSUFBSSxNQUFNLGVBQWUsQ0FBQztBQUt0QztJQU1FLDBCQUFvQixFQUFjLEVBQVUsUUFBbUI7UUFBM0MsT0FBRSxHQUFGLEVBQUUsQ0FBWTtRQUFVLGFBQVEsR0FBUixRQUFRLENBQVc7UUFKdEQsUUFBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLHNCQUFzQjtRQUNqQyxZQUFPLEdBQUcsU0FBUyxDQUFDO0lBR3NDLENBQUM7SUFFcEUsMENBQWUsR0FBZjtRQUNFLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbEMsSUFBSSxDQUFDLHNCQUFzQixFQUFFLENBQUM7SUFDaEMsQ0FBQztJQUVELGlEQUFzQixHQUF0QjtRQUFBLGlCQUlDO1FBSEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUN4RCxLQUFJLENBQUMsTUFBTSxPQUFYLEtBQUksV0FBVyxLQUFJLENBQUMsS0FBSyxHQUFFO1FBQzdCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7Z0JBWHVCLFVBQVU7Z0JBQW9CLFNBQVM7O0lBSnREO1FBQVIsS0FBSyxFQUFFO2lEQUFXO0lBQ1Y7UUFBUixLQUFLLEVBQUU7cURBQXFCO0lBQ3BCO1FBQVIsS0FBSyxFQUFFO21EQUFpQjtJQUpkLGdCQUFnQjtRQUg1QixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsV0FBVztTQUN0QixDQUFDO09BQ1csZ0JBQWdCLENBbUI1QjtJQUFELHVCQUFDO0NBQUEsQUFuQkQsSUFtQkM7U0FuQlksZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBZnRlclZpZXdJbml0LCBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIElucHV0LCBSZW5kZXJlcjJ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICogYXMgenpmeCBmcm9tICcuL3NvdXJjZS96emZ4JztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3pvdW5kZnhdJ1xufSlcbmV4cG9ydCBjbGFzcyBab3VuZGZ4RGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gIHByaXZhdGUgenpmeEZuOyAvLyBBIGJsYWNrYm94IHdpdGggdG9vIG1heSBwYXJhbXMgdG8gdHlwZS4uXG4gIEBJbnB1dCgpIHZvbCA9IDAuMTsgLy8gTnVtYmVyIGZyb20gMCB0byAxO1xuICBASW5wdXQoKSB0cmlnZ2VyID0gJ29uY2xpY2snO1xuICBASW5wdXQoKSB6b3VuZDogbnVtYmVyW107XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbDogRWxlbWVudFJlZiwgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyKSB7IH1cblxuICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgdGhpcy56emZ4Rm4gPSB6emZ4LlpaRlgodGhpcy52b2wpO1xuICAgIHRoaXMucmVnaXN0ZXJFdmVudExpc3RlbmVycygpO1xuICB9XG5cbiAgcmVnaXN0ZXJFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLnJlbmRlcmVyLmxpc3Rlbih0aGlzLmVsLm5hdGl2ZUVsZW1lbnQsIHRoaXMudHJpZ2dlciwgKCkgPT4ge1xuICAgICAgdGhpcy56emZ4Rm4oLi4udGhpcy56b3VuZCk7XG4gICAgfSk7XG4gIH1cblxufVxuIl19