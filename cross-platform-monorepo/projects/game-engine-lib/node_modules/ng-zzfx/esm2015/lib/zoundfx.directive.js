import { __decorate } from "tslib";
import { AfterViewInit, Directive, ElementRef, Input, Renderer2 } from '@angular/core';
import * as zzfx from './source/zzfx';
let ZoundfxDirective = class ZoundfxDirective {
    constructor(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this.vol = 0.1; // Number from 0 to 1;
        this.trigger = 'onclick';
    }
    ngAfterViewInit() {
        this.zzfxFn = zzfx.ZZFX(this.vol);
        this.registerEventListeners();
    }
    registerEventListeners() {
        this.renderer.listen(this.el.nativeElement, this.trigger, () => {
            this.zzfxFn(...this.zound);
        });
    }
};
ZoundfxDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
__decorate([
    Input()
], ZoundfxDirective.prototype, "vol", void 0);
__decorate([
    Input()
], ZoundfxDirective.prototype, "trigger", void 0);
__decorate([
    Input()
], ZoundfxDirective.prototype, "zound", void 0);
ZoundfxDirective = __decorate([
    Directive({
        selector: '[zoundfx]'
    })
], ZoundfxDirective);
export { ZoundfxDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem91bmRmeC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16emZ4LyIsInNvdXJjZXMiOlsibGliL3pvdW5kZnguZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsYUFBYSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNyRixPQUFPLEtBQUssSUFBSSxNQUFNLGVBQWUsQ0FBQztBQUt0QyxJQUFhLGdCQUFnQixHQUE3QixNQUFhLGdCQUFnQjtJQU0zQixZQUFvQixFQUFjLEVBQVUsUUFBbUI7UUFBM0MsT0FBRSxHQUFGLEVBQUUsQ0FBWTtRQUFVLGFBQVEsR0FBUixRQUFRLENBQVc7UUFKdEQsUUFBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLHNCQUFzQjtRQUNqQyxZQUFPLEdBQUcsU0FBUyxDQUFDO0lBR3NDLENBQUM7SUFFcEUsZUFBZTtRQUNiLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbEMsSUFBSSxDQUFDLHNCQUFzQixFQUFFLENBQUM7SUFDaEMsQ0FBQztJQUVELHNCQUFzQjtRQUNwQixJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRTtZQUM3RCxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzdCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUVGLENBQUE7O1lBYnlCLFVBQVU7WUFBb0IsU0FBUzs7QUFKdEQ7SUFBUixLQUFLLEVBQUU7NkNBQVc7QUFDVjtJQUFSLEtBQUssRUFBRTtpREFBcUI7QUFDcEI7SUFBUixLQUFLLEVBQUU7K0NBQWlCO0FBSmQsZ0JBQWdCO0lBSDVCLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxXQUFXO0tBQ3RCLENBQUM7R0FDVyxnQkFBZ0IsQ0FtQjVCO1NBbkJZLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QWZ0ZXJWaWV3SW5pdCwgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbnB1dCwgUmVuZGVyZXIyfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCAqIGFzIHp6ZnggZnJvbSAnLi9zb3VyY2UvenpmeCc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1t6b3VuZGZ4XSdcbn0pXG5leHBvcnQgY2xhc3MgWm91bmRmeERpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICBwcml2YXRlIHp6ZnhGbjsgLy8gQSBibGFja2JveCB3aXRoIHRvbyBtYXkgcGFyYW1zIHRvIHR5cGUuLlxuICBASW5wdXQoKSB2b2wgPSAwLjE7IC8vIE51bWJlciBmcm9tIDAgdG8gMTtcbiAgQElucHV0KCkgdHJpZ2dlciA9ICdvbmNsaWNrJztcbiAgQElucHV0KCkgem91bmQ6IG51bWJlcltdO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWw6IEVsZW1lbnRSZWYsIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMikgeyB9XG5cbiAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgIHRoaXMuenpmeEZuID0genpmeC5aWkZYKHRoaXMudm9sKTtcbiAgICB0aGlzLnJlZ2lzdGVyRXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIHJlZ2lzdGVyRXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5yZW5kZXJlci5saXN0ZW4odGhpcy5lbC5uYXRpdmVFbGVtZW50LCB0aGlzLnRyaWdnZXIsICgpID0+IHtcbiAgICAgIHRoaXMuenpmeEZuKC4uLnRoaXMuem91bmQpO1xuICAgIH0pO1xuICB9XG5cbn1cbiJdfQ==